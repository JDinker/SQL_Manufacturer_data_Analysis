
SELECT TOP 5 * FROM DIM_CUSTOMER
SELECT TOP 5 * FROM DIM_DATE
SELECT TOP 5 * FROM DIM_LOCATION
SELECT TOP 5 * FROM DIM_MANUFACTURER
SELECT TOP 5 * FROM DIM_MODEL
SELECT TOP 5 * FROM FACT_TRANSACTIONS

--SQL Advance Case Study

--Q1--BEGIN 
	
	SELECT DISTINCT DL.State
	FROM FACT_TRANSACTIONS AS FT
	INNER JOIN DIM_DATE AS DD ON FT.DATE = DD.DATE 
	INNER JOIN DIM_CUSTOMER AS DC ON FT.IDCustomer = DC.IDCustomer
	INNER JOIN DIM_LOCATION AS DL ON DL.IDLocation = FT.IDLocation
	INNER JOIN DIM_MODEL AS DM ON FT.IDModel = DM.IDModel
	INNER JOIN DIM_MANUFACTURER AS M ON M.IDManufacturer = DM.IDManufacturer
	WHERE DD.DATE >= '2005' AND M.Manufacturer_Name = 'Apple' 
	OR M.Manufacturer_Name = 'Samsung'
	OR M.Manufacturer_Name = 'One Plus'
	OR M.Manufacturer_Name = 'Nokia'
	OR M.Manufacturer_Name = 'Motorola'
	OR M.Manufacturer_Name = 'HTC';

--Q1--END

--Q2--BEGIN

SELECT DL.State, COUNT(*) AS Numberofsumsungphones
	FROM FACT_TRANSACTIONS AS FT
	INNER JOIN DIM_DATE AS DD ON FT.DATE = DD.DATE 
	INNER JOIN DIM_CUSTOMER AS DC ON FT.IDCustomer = DC.IDCustomer
	INNER JOIN DIM_LOCATION AS DL ON DL.IDLocation = FT.IDLocation
	INNER JOIN DIM_MODEL AS DM ON FT.IDModel = DM.IDModel
	INNER JOIN DIM_MANUFACTURER AS M ON M.IDManufacturer = DM.IDManufacturer
	WHERE M.Manufacturer_Name = 'Samsung'
	GROUP BY DL.State
	ORDER BY Numberofsumsungphones DESC

--Q2--END

--Q3--BEGIN      
	
	SELECT DL.State ,DL.ZipCode ,DM.Model_Name, COUNT(*) AS Number_of_transactions
	FROM FACT_TRANSACTIONS AS FT
	INNER JOIN DIM_CUSTOMER AS DC ON FT.IDCustomer = DC.IDCustomer
	INNER JOIN DIM_LOCATION AS DL ON DL.IDLocation = FT.IDLocation
	INNER JOIN DIM_MODEL AS DM ON FT.IDModel = DM.IDModel
	INNER JOIN DIM_MANUFACTURER AS M ON M.IDManufacturer = DM.IDManufacturer
	GROUP BY DL.State , DL.ZipCode , DM.Model_Name
	ORDER BY DL.State , DL.ZipCode , DM.Model_Name DESC ;

--Q3--END

--Q4--BEGIN

SELECT M.Manufacturer_Name, MIN(FT.TotalPrice) AS Cheapest_Phone_Price
	FROM FACT_TRANSACTIONS AS FT 
	INNER JOIN DIM_MODEL AS DM ON FT.IDModel = DM.IDModel
	INNER JOIN DIM_MANUFACTURER AS M ON M.IDManufacturer = DM.IDManufacturer
	GROUP BY  M.Manufacturer_Name  
	ORDER BY  Cheapest_Phone_price  ASC

--Q4--END

--Q5--BEGIN

SELECT MO.Model_Name,AVG(MO.Unit_price) AS AVG_PRICE 
FROM DIM_MODEL AS MO
INNER JOIN DIM_MANUFACTURER AS MA
ON MA.IDManufacturer = MO.IDManufacturer
WHERE MA.Manufacturer_Name IN 
                             (SELECT TOP 5 MA.Manufacturer_Name FROM FACT_TRANSACTIONS AS FT
							 INNER JOIN DIM_MODEL AS MO
							 ON FT.IDModel = MO.IDModel
							 INNER JOIN DIM_MANUFACTURER AS MA
							 ON MA.IDManufacturer = MO.IDManufacturer
							 GROUP BY MA.Manufacturer_Name
							 ORDER BY SUM(FT.Quantity))
GROUP BY MO.Model_Name
ORDER BY AVG_PRICE DESC;

--Q5--END

--Q6--BEGIN

SELECT C.Customer_Name ,C.IDCustomer, AVG(FT.TotalPrice) AS AVG_PRICE , YEAR(FT.Date) AS YEAR_
FROM DIM_CUSTOMER AS C
INNER JOIN FACT_TRANSACTIONS AS FT
ON C.IDCustomer = FT.IDCustomer
WHERE YEAR(FT.Date) ='2009'
GROUP BY C.IDCustomer,C.Customer_Name,FT.Date
HAVING AVG(FT.TotalPrice) > '500';

--Q6--END
	
--Q7--BEGIN  
	SELECT T1.Model_Name
	FROM
	(SELECT TOP 5 MO.Model_Name , YEAR(T.DATE) AS YEAR_ , SUM(T.QUANTITY) AS SUM_QTY
	FROM FACT_TRANSACTIONS AS T 
	INNER JOIN DIM_MODEL AS MO
	ON T.IDModel = MO.IDModel
	WHERE YEAR(T.DATE) ='2008'
	GROUP BY MO.Model_Name , YEAR(T.DATE)
	ORDER BY SUM_QTY DESC) AS T1
	INTERSECT SELECT T2.MODEL_NAME 
	FROM
	(SELECT TOP 5 MO.Model_Name, YEAR(T.DATE) AS YEAR_ , SUM(T.QUANTITY) AS SUM_QTY
	FROM FACT_TRANSACTIONS AS T 
	INNER JOIN DIM_MODEL AS MO
	ON T.IDModel = MO.IDModel
	WHERE YEAR(T.DATE) = ' 2009'
	GROUP BY MO.Model_Name, YEAR(T.DATE)
	ORDER BY SUM_QTY DESC) AS T2 
	INTERSECT 
	SELECT T3.MODEL_NAME 
	FROM
	(SELECT TOP 5 MO.Model_Name, YEAR(T.DATE) AS YEAR_ , SUM(T.QUANTITY) AS SUM_QTY
	FROM FACT_TRANSACTIONS AS T 
	INNER JOIN DIM_MODEL AS MO
	ON T.IDModel = MO.IDModel
	WHERE YEAR(T.DATE) = ' 2010'
	GROUP BY MO.Model_Name, YEAR(T.DATE)
	ORDER BY SUM_QTY DESC) AS T3;

--Q7--END	
--Q8--BEGIN

SELECT TOP 4 MA.Manufacturer_Name , YEAR(T.DATE) AS YEAR_, SUM(T.Quantity) AS SUM_QTY
FROM DIM_MANUFACTURER AS MA
INNER JOIN DIM_MODEL AS MO
ON MA.IDManufacturer = MO.IDManufacturer
INNER JOIN FACT_TRANSACTIONS AS T 
ON MO.IDModel = T.IDModel
WHERE YEAR(T.Date) IN ('2010','2009')
GROUP BY MA.Manufacturer_Name, YEAR(T.DATE)
ORDER BY SUM_QTY DESC;

--Q8--END
--Q9--BEGIN
	
	SELECT MA.MANUFACTURER_NAME, MO.Model_Name, YEAR(T.DATE) AS YEAR_
	FROM DIM_MANUFACTURER AS MA 
	INNER JOIN DIM_MODEL AS MO
	ON MA.IDManufacturer = MO.IDManufacturer
	INNER JOIN FACT_TRANSACTIONS AS T 
	ON MO.IDModel = T.IDModel
	WHERE YEAR(T.DATE) ='2010' EXCEPT
	SELECT MA.Manufacturer_Name, MO.Model_Name, YEAR(T.DATE) AS YEAR_
	FROM DIM_MANUFACTURER AS MA 
	INNER JOIN	DIM_MODEL AS MO
	ON MA.IDManufacturer = MO.IDManufacturer
	INNER JOIN FACT_TRANSACTIONS AS T 
	ON MO.IDModel = T.IDModel
	WHERE YEAR(T.DATE) = ' 2009';

--Q9--END
--Q10--BEGIN
	
	SELECT *, LAG(SUM_TOTAL_PRICE,1) OVER (PARTITION BY IDCUSTOMER ORDER BY YEAR_) AS PREVIOUS_TOTAL_PRICE
	FROM(
SELECT DISTINCT YEAR(T.DATE) AS YEAR_,T.IDCustomer,
	AVG(T.TOTALPRICE) OVER (PARTITION BY T.IDCUSTOMER ORDER BY YEAR(T.DATE)) AS AVG_SPEND,
	AVG(T.Quantity) OVER (PARTITION BY T.IDCUSTOMER ORDER BY YEAR(T.DATE)) AS AVG_QUANTITY,
	AVG(T.TOTALPRICE) OVER (PARTITION BY T.IDCUSTOMER ORDER BY YEAR(T.DATE)) AS SUM_TOTAL_PRICE
	FROM FACT_TRANSACTIONS AS T
	INNER JOIN DIM_CUSTOMER AS C 
	ON T.IDCustomer = C.IDCustomer
	WHERE T.IDCustomer IN (SELECT TOP 10 T.IDCustomer FROM FACT_TRANSACTIONS AS T 
	                      GROUP BY T.IDCustomer
						  ORDER BY SUM(T.TotalPrice) DESC)
						  ) AS T1;

--Q10--END
	

